name: "deploy"

on:
  push:
    paths:
      - ".github/workflows/**"
      - "src/**"
      - "build.gradle.kts"
      - "settings.gradle.kts"
      - "Dockerfile"
    branches:
      - "main"
      - "app1"
      - "app2"
      - "app3"
      - "app4"
      - "app5"
env:
  APP_NAME: grr-test
jobs:
  makeTagAndRelease:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Create Tag
        id: create_tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.create_tag.outputs.changelog }}
          draft: false
          prerelease: false

  buildImageAndPush:
    name: 도커 이미지 빌드와 푸시
    needs: makeTagAndRelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v2

      - name: 레지스트리 로그인
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: set lower case owner name
        run: echo "OWNER_LC=${OWNER,,}" >> $GITHUB_ENV
        env:
          OWNER: "${{ github.repository_owner }}"

      - name: application-secret.yml 생성
        env:
          APPLICATION_SECRET: ${{ secrets.APPLICATION_SECRET_YML }}
        run: echo "$APPLICATION_SECRET" > src/main/resources/application-secret.yml

      - name: 빌드 앤 푸시
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ env.APP_NAME }}:${{ needs.makeTagAndRelease.outputs.tag_name }},
            ghcr.io/${{ env.OWNER_LC }}/${{ env.APP_NAME }}:latest

  deploy:
    name: 쿠버네티스 배포
    needs: [ makeTagAndRelease, buildImageAndPush ]
    runs-on: ubuntu-latest
    steps:
      - uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: set lower case owner name
        run: echo "OWNER_LC=${OWNER,,}" >> $GITHUB_ENV
        env:
          OWNER: "${{ github.repository_owner }}"

      - name: 브랜치 기반 디플로이먼트 이름 설정
        run: |
          echo "DEPLOYMENT_NAME=${{ env.APP_NAME }}-${GITHUB_REF_NAME}-deployment" >> $GITHUB_ENV
          echo "CONTAINER_NAME=${{ env.APP_NAME }}-${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: 이미지 업데이트 및 출력
        run: |
          echo "kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.CONTAINER_NAME }}=ghcr.io/${{ env.OWNER_LC }}/${{ env.APP_NAME }}:${{ needs.makeTagAndRelease.outputs.tag_name }}"
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.CONTAINER_NAME }}=ghcr.io/${{ env.OWNER_LC }}/${{ env.APP_NAME }}:${{ needs.makeTagAndRelease.outputs.tag_name }}